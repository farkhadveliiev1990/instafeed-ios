//
//  ProfileInteractor.swift
//  Instafeed
//
//  Created by A1GEISP7 on 07/09/19.
//  Copyright (c) 2019 gulam ali. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileBusinessLogic
{
  func getProfile(request: Profile.ProfileData.Request)
    func updateProfile(request: Profile.ProfileData.Request)
    func updateProfilePic(request: Profile.ProfileData.Request)
    func removeProfilePic(request: Profile.ProfileData.Request)
}

protocol ProfileDataStore
{
  
}

class ProfileInteractor: ProfileBusinessLogic, ProfileDataStore
{
  var presenter: ProfilePresentationLogic?
  var worker: ProfileWorker?
  
  // MARK: Do something
  
  func getProfile(request: Profile.ProfileData.Request)
  {
    worker = ProfileWorker()
    worker?.getProfileData(completionHandler:{[weak self](response, error) in
        guard let sSelf = self else {
            return;
        }
        guard let data = response else{
            Toast().showToast(message: "Something went wrong. Please try again in sometime!!!", duration: 2)
            return
        }
        var response = Profile.ProfileData.Response()
        response.data = data
        sSelf.presenter?.presentProfileData(response: response)
    })
  }
    func updateProfile(request: Profile.ProfileData.Request) {
        worker = ProfileWorker()
        worker?.updateProfile(profileData: request.data, completionHandler: { [weak self](result, err) in
            guard let sSelf = self else {
                return;
            }
            if let data = result, data.message == "success"{
                var response = Profile.ProfileData.Response()
                response.updateResult.message = data.message
                sSelf.presenter?.presentUpdationResult(response: response)
            }else{
                if err?.message == "error400"{
                    
                }else{
                    Toast().showToast(message: "Something went wrong. Please try again in sometime!!!", duration: 2)
                }
                
            }
        })
    }
    
    func removeProfilePic(request: Profile.ProfileData.Request) {
        worker = ProfileWorker()
        worker?.deletePic(completionHandler: {[weak self](result, err) in
            guard let sSelf = self else {
                return;
            }
            if let data = result, data.message == "success"{
                var response = Profile.ProfileData.Response()
                response.deleteResult.message = data.message
                sSelf.presenter?.presentProfileData(response: response)
            }else{
                Toast().showToast(message: "Something went wrong. Please try again in sometime!!!", duration: 2)
                
            }
        })
    }
    
    func updateProfilePic(request: Profile.ProfileData.Request) {
        worker = ProfileWorker()
        worker?.updatePic(profilepic: request.profilePic, completionHandler: {[weak self](result, err) in
            guard let sSelf = self else {
                return;
            }
            if let data = result, data.message == "success"{
                var response = Profile.ProfileData.Response()
                response.profilepicResult = data
                sSelf.presenter?.presentProfilePicUpdation(response: response)
            }else{
                Toast().showToast(message: "Something went wrong. Please try again in sometime!!!", duration: 2)
                
            }
        })
    }
}
